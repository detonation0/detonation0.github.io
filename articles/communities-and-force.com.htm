<!-- Communities and Force.com -->

<!DOCTYPE html>
<html>
  <head>
    <script src="../assets/js/pace.min.js"></script>
    <link href="../assets/css/pace-theme-minimal.css" rel="stylesheet" />

    <!-- Meta -->
    <meta name="robots" content="index, follow">
    
    <title>Communities and Force.com | Detonation Blog</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">

    <!-- Bootstrap -->
    <link href="../assets/css/bootstrap.min.css" rel="stylesheet">
    <link href="../style.css" rel="stylesheet">
    <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
    <![endif]-->

    <!-- Favicon -->
    <link rel="shortcut icon" href="../favicon.ico">

  </head>

  <body>
   
    <!-- Docs master nav -->
    <header class="navbar navbar-default navbar-fixed-top bs-docs-nav" role="banner">
      <div class="container">
        <div class="navbar-header">
          <button class="navbar-toggle" type="button" data-toggle="collapse" data-target=".bs-navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <img src="../images/bomb.png" class="pull-left" style="height:45px; width=45px; padding-top:6px;
        margin-right:8px; margin-left:3px;" />
          <a href="../index.html" class="navbar-brand" style="font-size:11pt">DETONATION<b style="color:#999999;">BLOG</b></a>
        </div>
        <nav class="collapse navbar-collapse bs-navbar-collapse" role="navigation">
          <ul class="nav navbar-nav">
            <li>
              <a href="../index.html">Blog Posts</a>
            </li>
            <li>
              <a href="../about.htm">Site Info</a>
            </li>
            <li>
              <a href="../resume.htm">Resume</a>
            </li>
            <li>
              <a href="../portfolio.htm">Portfolio</a>
            </li>
            <li>
              <a href="../music.htm">My Music</a>
            </li>
          </ul>
        </nav>
      </div>
    </header>

    <div class="container">

      <!-- Content Goes Here -->
      <h1>Communities and Force.com</h1>
      <p>Posted on February 3rd, 2014</p>
      <p class="c0 c5"><span class="c4"></span></p><h3 class="c10 c12"><a name="h.d94165trx420"></a><span class="c23 c29">Using Visualforce</span></h3><p class="c3 c5"><span></span></p><p class="c9"><span class="c13">Visualforce allows us to create and edit web pages using Salesforce&rsquo;s Apex code to pull data from our organization and object and display them on our site. Just like a normal website we can use HTML, CSS and Java to hard code pages allowing us to fully customize our site&rsquo;s look and feel.</span></p><p class="c9"><span class="c13">In order to get started with a new webpage all we need to do is log into our Salesforce environment and add: </span><code><a name="h.w03o5jhzpxdt"></a><span><pre>/apex/&lt;&quot;page name&quot;&gt;</pre></span></code> to the end of our url. Salesforce will do the work for you and ask if you&#39;d like to create a new page. Alternatively, you can go to Setup &gt; Develop &gt; Pages &gt; New. </span><span class="c2">Once we create the page we will be taken to the url for the page and you will see the Salesforce sidebar and navigation bar with the main page content reading: </span><span class="c17 c30">Congratulations this is your new page!</span><span class="c2">&nbsp;In order to edit the page (if you don&#39;t already see the page editor toolbar at the bottom) you&#39;ll need to go to Setup &gt; Users &gt; Select your username &gt; Edit &gt; Check the box for &#39;Enable Development Mode&#39; &gt; Save.</span></p><p class="c0"><span class="c2">Once we&#39;re on the page you will see the Dev Console on the bottom of the page: </span></p><p class="c0 c5"><span class="c4"></span></p><p class="c0"><img height="253" src="images/devconsole.png" class="img-responsive"width="624"></p><p class="c0"><span class="c2">In here is where we will be writing our code. The way Apex requires you to write a web page isn&rsquo;t all that different than HTML. The basic structure (and how I like to do it) is as follows:</span></p><p class="c0 c5"><span class="c2"></span></p><pre><code><a name="h.3aah4zpy60k2"></a><span>&lt;apex:page &gt;</span></code><br /><code><a name="h.3aah4zpy60k2"></a><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;head&gt;</span></code><br /><code><a name="h.3aah4zpy60k2"></a><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- Code ---&gt; </span></code><br /><code><a name="h.3aah4zpy60k2"></a><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/head&gt;</span></code><br /><code><a name="h.3aah4zpy60k2"></a></code><br /><code><a name="h.3aah4zpy60k2"></a><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;</span></code><br /><code><a name="h.3aah4zpy60k2"></a><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- Code ---&gt;</span></code><br /><code><a name="h.3aah4zpy60k2"></a><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;</span></code><br /><code><a name="h.3aah4zpy60k2"></a><span>&lt;/apex:page &gt;</span></code></pre><p class="c0 c5"><span class="c2"></span></p><p class="c24 c10 title"><a name="h.nrzjzwczkkm9"></a><span><br /><h3>Completely Custom</h3></span></p><p class="c0 c5"><span class="c2"></span></p><p class="c0"><span class="c2">Because Visualforce allows us to code in HTML and import our own CSS stylesheets we can really make the page not only display our data with Salesforce, but look great too! In order to get our own styles going on the page we&rsquo;ll need to add some arguments to the apex:page tag at the top:</span></p><p class="c0 c5"><span></span></p><code class="c10"><a name="h.70f7jxonwrif"></a><span><pre>&lt;apex:page showHeader=&rdquo;false&rdquo; sidebar=&rdquo;false&rdquo; standardStylesheets=&rdquo;false&rdquo; &gt; </pre></span></code><br /><p class="c0 c5"><span class="c2"></span></p><p class="c0"><span class="c2">These do exactly what you&rsquo;d think, removes the header, sidebar, and Salesforce stylesheets from the page. The result looks like this: </span></p><p class="c0 c5"><span class="c2"></span></p><p class="c0"><img height="258" src="images/custompage.png" class="img-responsive" width="624"></p><p class="c0 c5"><span class="c2"></span></p><p class="c0"><span class="c2">As you can see, we&rsquo;ve just turned this page into a standard HTML page. From this point on you can add any kind of code/sources/libraries/etc. just like you would normally. However there are a few things you&rsquo;ll need to know about adding resources with Apex. </span></p><p class="c0 c5"><span class="c2"></span></p><p class="c10 c28"><span class="c2">For example instead of writing CSS on the page itself, you can include it in the page from a static resource. Click Setup &gt; Develop &gt; Static Resources &gt; and upload your .css file. In order to include the file on the page, type: </span></p><p class="c5 c10 c28"><span></span></p><code><pre>&lt;apex:stylesheet value=&quot;{!$Resource.stylesheet_example}&quot;/&gt; </pre></code><br /><br /><p class="c10 c28"><span class="c4">where the part after &ldquo;{!$Resource.&rdquo; is the name you gave the file during the upload. The same thing goes for Javascript. You can upload your .js file and include it by typing: </span></p><p class="c10 c28"><code class="c25"><pre>&lt;apex:includeScript value=&quot;{!$Resource.example_js}&quot;/&gt;</pre></code></p><p class="c3 c5"><span></span></p><p class="c3"><span>If you don&rsquo;t want to utilize the include statements, you can still edit script and css on the page with the standard &lt;script&gt; and &lt;style&gt; tags. What I&rsquo;ve done with my page is implemented a little Twitter Boostrap to make it responsive and added my own theme:</span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3"><img height="274" src="images/customtheme.png" class="img-responsive" width="624"></p><p class="c3 c5"><span></span></p><p class="c3"><span>More information on Visualforce tags, Apex, and Static Resources can be found - </span></p><p class="c3 c18"><span>&gt; </span><span class="c8"><a class="c16" href="https://na14.salesforce.com/help/pdfs/en/salesforce_visualforce_developer_cheatsheet.pdf">Visualforce Cheat Sheet!</a></span></p><p class="c3 c18"><span>&gt; </span><span class="c8"><a class="c16" href="https://na14.salesforce.com/help/pdfs/en/salesforce_platform_portal_implementation_guide.pdf">Building a Site with Salesforce</a></span></p><p class="c3 c18"><span>&gt; </span><span class="c8"><a class="c16" href="http://wiki.developerforce.com/page/Delivering_Static_Resources_with_Visualforce">Static Resources</a></span></p><p class="c3 c5"><span></span></p><p class="c10 c24 title"><a name="h.pbd4nhuceni8"></a><span><br /><h3>But What About </span><i>My</i><span>&nbsp;Data?</h3></span></p><p class="c3 c5"><span></span></p><p class="c3"><span>So now we&rsquo;ve got the layout for our page, we want to start putting data from Salesforce into it. The way Salesforce displays our data is through Controllers. Salesforce describes them as:</span></p>

      <blockquote>
      <p>&ldquo;...a set of instructions that specify what happens when a user interacts with the components specified in associated Visualforce markup, such as when a user clicks a button or link. Controllers also provide access to the data that should be displayed in a page, and can modify component behavior.</p><p>The Force.com platform provides a number of standard controllers that contain the same functionality and logic that are used for standard Salesforce pages. For example, if you use the standard Accounts controller, clicking a Save button in a Visualforce page results in the same behavior as clicking Save on a standard Account edit page.</p><p>A standard controller exists for every Salesforce object that can be queried using the Force.com API.&rdquo;</p>
      </blockquote>

      <p class="c0 c5"><span class="c1"></span></p><p class="c3"><span>With these instructions we will be able to display our objects on the page. So let&rsquo;s say you&rsquo;re like me and you wanted to display the top 10 Ideas in your organization on the page. We will write a controller to query the database and return the results:</span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><pre><code class="c7"><a name="h.73rlveepap81"></a><span>// Create a controller to use on a VisualForce page to list ideas &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>public class IdeaListController {</span></code><br /><code class="c7 c5"><a name="h.73rlveepap81"></a></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; public IdeaListController(ApexPages.StandardController controller) {</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; }</span></code><br /><code class="c7 c5"><a name="h.73rlveepap81"></a></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; public final Idea[] ideas {get; private set;}</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; </span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; public IdeaListController() {</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; &nbsp; &nbsp; Integer i = 0;</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; &nbsp; &nbsp; ideas = new Idea[10];</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; &nbsp; &nbsp; for (Idea tmp : Database.query</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>(&#39;SELECT Id, Title, VoteTotal, NumComments FROM Idea WHERE Id != null ORDER BY VoteTotal Desc Limit 5&#39;)) {</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i++;</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ideas.add(tmp);</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span></code><br /><code class="c7"><a name="h.73rlveepap81"></a><span>&nbsp; &nbsp; } </span></code><br /></pre><p class="c3 c5"><span></span></p><p class="c3"><span>This controller creates a small array called Idea[] that will grab the Id, Title, Vote Total, and Number of Comments from the Idea Object and order them by the number of votes descending. But we can&rsquo;t do much with this unless we write the correct code to display it on the page. </span></p><p class="c3 c5"><span></span></p><p class="c3"><span>On the Visualforce page, add the name of the controller to the &lt;apex:page&gt; tag: controller=&rdquo;IdeaListController&rdquo;. This will have the page call that controller to get the data. But in order to actually display the data on the page we need to call it in a pageblock. </span></p><p class="c3 c5"><span></span></p><pre><code class="c7 c31"><a name="h.xhkpnimztsi2"></a><span>&lt;apex:pageBlock title=&quot;Top ASU Ideas&quot; mode=&quot;maindetail&quot;&gt;</span></code><br /><code class="c6"><a name="h.ribsa97cpohy"></a><span>&lt;apex:panelGrid &gt;</span></code><br /><code class="c6 c21"><a name="h.ribsa97cpohy"></a><span>&lt;apex:dataList value=&quot;{!ideas}&quot; &nbsp;var=&quot;idea&quot; id=&quot;ideaList&quot;&gt;</span></code><br /><code class="c6"><a name="h.ribsa97cpohy"></a><span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;apex:outputText value=&quot;{!idea.title}&quot; escape=&quot;true&quot;/&gt;</span></code><br /><code class="c6"><a name="h.ribsa97cpohy"></a><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;apex:outputText value=&quot;{!idea.votetotal/10}&quot; escape=&quot;true&quot;/&gt;</span></code><br /><code class="c6"><a name="h.ribsa97cpohy"></a><span>&nbsp; &nbsp; &nbsp; &lt;/apex:dataList&gt;</span></code><br /><code class="c6"><a name="h.jqudph8fj4u4"></a><span>&lt;/apex:panelGrid&gt;</span></code><br /><code class="c7"><a name="h.apqkxhnlsjrc"></a><span>&lt;/apex:pageBlock&gt;</span></code><br /></pre><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3"><span>In this code snippet we&rsquo;ve created a pageBlock (salesforces way of displaying information) with a datalist nested inside a panelGrid to show our outputText. The output text we&rsquo;ve called is the Title and Vote Total from the object Idea written as {!idea.title}. For the Vote Total, we&rsquo;ve taken it and divided the total number by 10 (Salesforce automatically scores an upvote 10 point for every one vote, in this example we want just the total number of votes, therefore we&rsquo;ve divided by 10) to achieve our count total. &nbsp;</span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3 c5"><span></span></p><p class="c3"><span>With some customization, we can get it looking real good:</span></p><p class="c3 c5"><span></span></p><p class="c3"><img height="272" src="images/topideas.png" class="img-responsive" width="347"></p><p class="c3 c5"><span></span></p><p class="c3"><span>With Visualforce we can display our data any way we want to fairly easily. Salesforce does all the work for you in the cloud without having to worry about server maintenance and data management on our end. If you&rsquo;d like a more detailed example check out the docs from Salesforce:</span></p><p class="c3 c5"><span></span></p><p class="c3 c18"><span>&gt; </span><span class="c8"><a class="c16" href="http://www.salesforce.com/us/developer/docs/apex_workbook/Content/apex_visualforce_3.htm">Displaying Product Data in a Visualforce Page</a></span></p><p class="c3 c18"><span>&gt; </span><span class="c8"><a class="c16" href="http://wiki.developerforce.com/page/User_Interface">Visualforce User Interface</a></span></p><p class="c3 c18"><span>&gt; </span><span class="c8"><a class="c16" href="http://wiki.developerforce.com/page/Documentation">Full Documentation</a></span></p>
      
    <p>
        <br />
        <!-- AddToAny BEGIN -->
        <div class="a2a_kit a2a_kit_size_32 a2a_default_style">
        <a class="a2a_button_facebook"></a>
        <a class="a2a_button_twitter"></a>
        <a class="a2a_button_google_plus"></a>
        <a class="a2a_button_evernote"></a>
        <a class="a2a_button_linkedin"></a>
        </div>
        <script type="text/javascript" src="//static.addtoany.com/menu/page.js"></script>
        <!-- AddToAny END -->
      </p>
    
    
    <hr>

   <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'detonation0'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    

    <hr>

    <footer>
       <div class="container">
        <div class="row">
          <a class="btn btn-primary pull-right" href="#">Top <span class="caret caret-up"></span></a>
          &copy; <small>MATHEW<b style="color:#666666;">RUFF</b></small> 2014
          <div class="btn-group pull-right">
              <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                  Social <span class="caret caret-up"></span>
              </button>
              <ul class="dropdown-menu drop-up" role="menu">
                  <li><a href="https://www.facebook.com/mat.ruff" target="_blank">
                      Facebook<div class="fa fa-facebook-square pull-right"></div></a></li>
                  <li><a href="https://plus.google.com/118219240898003217231/posts" target="_blank">Google+<div class="fa fa-google-plus-square pull-right"></div></a></li>
                  <li><a href="http://www.linkedin.com/pub/mathew-ruff/63/27b/a1a/" target="_blank">LinkedIn<div class="fa fa-linkedin-square pull-right"></div></a></li>
                  <li><a href="http://www.youtube.com/user/metalhead8122?feature=mhee" target="_blank">YouTube<div class="fa fa-youtube-square pull-right"></div></a></li>
              </ul>
          </div>
        </div>
           </div>
      </footer>
    </div> <!-- /container -->
    <br />


    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="../assets/js/bootstrap.min.js"></script>
  </body>
</html>